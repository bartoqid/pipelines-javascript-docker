# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: 'Ubuntu-16.04'

variables:
  imageName: 'pipelines-javascript-docker'

steps:
- task: Docker@2
  displayName: Build an image
  inputs:
    command: buildAndPush
    containerRegistry: DockerHub
    Dockerfile: app/Dockerfile
    repository: bartoq/azurepipeline
    tags: |
      $(Build.BuildId)
      latest

- task: UniversalPackages@0
      inputs:
        command: 'download'
        downloadDirectory: '$(System.DefaultWorkingDirectory)'
        feedsToUse: 'internal'
        vstsFeed: '92298d75-05de-4959-92e7-38a3c6bc5756/61a66d17-4a18-473d-ad30-008c2d2dcfb6'
        vstsFeedPackage: '22b968ca-5844-47ef-8a39-dc7d78a802e0'
        vstsPackageVersion: '19.11.0'
    - task: CmdLine@2
      inputs:
        script: |
          sudo mv $(System.DefaultWorkingDirectory)/twistcli /usr/bin/twistcli
          sudo chmod +x /usr/bin/twistcli
    - task: twistcli-scan@1
      inputs:
        scanType: 'images'
        twistlockService: 'SC1'
        vulnerabilityThreshold: 'low'
        onlyFixed: false
        gracePeriod: '0'
        complianceThreshold: 'low'
        artifact: 'bartoq/azurepipeline'